
from fastapi import FastAPI, Request
import requests
import yfinance as yf
import os

app = FastAPI()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET", "secret-path")

portfolio = {}
balance = 100.0

def send_message(chat_id, text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    requests.post(url, json={"chat_id": chat_id, "text": text})

@app.post(f"/webhook")
async def telegram_webhook(req: Request):
    data = await req.json()
    message = data.get("message", {})
    chat_id = message.get("chat", {}).get("id")
    text = message.get("text", "")

    global balance

    if text == "/start":
        send_message(chat_id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º. –ù–∞–ø–∏—à–∏ /recommend, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç—ã.")
    elif text == "/recommend":
        send_message(chat_id, "üìà –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å: PLTR, SOFI, F ‚Äî —Ö–æ—Ä–æ—à–∏–µ –Ω–µ–¥–æ—Ä–æ–≥–∏–µ –∞–∫—Ü–∏–∏ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º —Ä–æ—Å—Ç–∞.")
    elif text.startswith("/analyze "):
        ticker = text.split(" ", 1)[1].strip().upper()
        stock = yf.Ticker(ticker)
        info = stock.info
        price = info.get("currentPrice", "N/A")
        pe = info.get("trailingPE", "N/A")
        send_message(chat_id, f"üìä {ticker}:\n–¶–µ–Ω–∞: {price}\nP/E: {pe}")
    elif text.startswith("/add "):
        try:
            _, ticker, amount = text.split()
            amount = float(amount)
            ticker = ticker.upper()
            if amount > balance:
                send_message(chat_id, f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ë–∞–ª–∞–Ω—Å: ${balance:.2f}")
            else:
                portfolio[ticker] = portfolio.get(ticker, 0) + amount
                balance -= amount
                send_message(chat_id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {ticker} –Ω–∞ ${amount:.2f}")
        except:
            send_message(chat_id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /add TICKER –°–£–ú–ú–ê")
    elif text == "/portfolio":
        if not portfolio:
            send_message(chat_id, f"üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å –ø—É—Å—Ç. –ë–∞–ª–∞–Ω—Å: ${balance:.2f}")
        else:
            summary = "\n".join([f"{k}: ${v:.2f}" for k, v in portfolio.items()])
            send_message(chat_id, f"üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å:\n{summary}\n–û—Å—Ç–∞—Ç–æ–∫: ${balance:.2f}")
    else:
        send_message(chat_id, "ü§ñ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /start, /recommend, /add, /portfolio, /analyze")
    return {"ok": True}
